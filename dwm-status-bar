#!/bin/sh

# Setup status bar
upd() {
	upd="$(pacman -Qu | wc -l)"
	echo -e " $upd updates"
}

# In the future automatically choose audio level
audio_level() {
	aud="$(pactl get-sink-volume @DEFAULT_SINK@ | grep -Po '\d+(?=%)' | head -n 1)"
	if ((aud > 50)) ; then
		volicon=""
	elif ((aud > 0)) ; then
		volicon=""
	else
		volicon=""
	fi

	echo -e "$volicon $aud%"
}

dte() {
	dte="$(date +"%I:%M %p -  %A, %b %d, %Y")"
	echo -e "  $dte"
}

mem() {
	mem=`free | awk '/Mem/ {printf "%d/%dmb\n", $3 / 1024.0, $2 / 1024.0 }'`
	echo -e " $mem used"
}

cpu() {
	read cpu a b c previdle rest < /proc/stat
	prevtotal=$((a+b+c+previdle))
	sleep 0.5
	read cpu a b c idle rest < /proc/stat
	total=$((a+b+c+idle))
	cpu=$((100 * ( (total-prevtotal) - (idle-previdle) ) / (total - prevtotal) ))
	echo -e " $cpu%"
}

# Taken from
# https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/statusbar/sb-internet
network() {
	# Check for wifi
	if [ "$(cat /sys/class/net/w*/operstate 2>/dev/null)" = 'up' ] ; then
		wifiicon="$(awk '/^\s*w/ { print "", int($3 * 100 / 70) "% " }' /proc/net/wireless)"
	elif [ "$(cat /sys/class/net/w*/operstate 2>/dev/null)" = 'down' ] ; then
		[ "$(cat /sys/class/net/w*/flags 2>/dev/null)" = '0x1003' ] && wifiicon="📡 " || wifiicon="❌ "
	fi

	# Ethernet
	[ "$(cat /sys/class/net/e*/operstate 2>/dev/null)" = 'up' ] && ethericon="🌐" || ethericon="❎"

	# TUN
	[ -n "$(cat /sys/class/net/tun*/operstate 2>/dev/null)" ] && tunicon=" 🔒"
	echo -e "$wifiicon $ethericon $tuniicon"
}

while true; do
	xsetroot -name "  $(cpu) | $(mem) | $(upd) | $(audio_level) | $(network) | $(dte)  "
	sleep 2
done &


